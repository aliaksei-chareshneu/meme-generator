{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","general-functions.js","components/App.js","index.js"],"names":["Header","MemeGenerator","props","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleFormSubmit","event","preventDefault","target","value","name","this","setState","min","max","randomInt","length","Math","ceil","floor","random","url","fetch","proxy","headers","then","response","json","memes","data","className","onSubmit","type","placeholder","onChange","src","alt","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uLAceA,EAZA,WACX,OACI,gCAKI,+C,8CC2DGC,E,kDAhEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,YAAa,gCACbC,YAAa,IAGjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBAXT,E,yDAcNE,GACTA,EAAMC,iBADU,MAEMD,EAAME,OAArBC,EAFS,EAETA,MAAOC,EAFE,EAEFA,KAEdC,KAAKC,SAAL,eACKF,EAAOD,M,uCAICH,GACbA,EAAMC,iBACN,IC7BqBM,EAAKC,ED6BpBC,GC7BeF,ED6BU,EC7BLC,ED6BQH,KAAKb,MAAMI,YAAYc,OC5B7DH,EAAMI,KAAKC,KAAKL,GAChBC,EAAMG,KAAKE,MAAML,GACVG,KAAKE,MAAMF,KAAKG,UAAYN,EAAMD,IAAQA,GD2BvCQ,EAAMV,KAAKb,MAAMI,YAAYa,GAAWM,IAE9CV,KAAKC,SAAS,CACVX,YAAaoB,M,0CAIA,IAAD,OAGhBC,MAAMC,yEAA8C,CAACC,QAF3C,CAAC,mBAAoB,oBAG1BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACP,EAAKhB,SAAS,CACVV,YAAa0B,S,+BAMzB,OACI,6BACI,0BAAME,UAAU,YAAYC,SAAUpB,KAAKN,kBACvC,2BAAO2B,KAAK,OAAOtB,KAAK,UAAUD,MAAOE,KAAKb,MAAMC,QAASkC,YAAY,WAAWC,SAAUvB,KAAKR,eACnG,2BAAO6B,KAAK,OAAOtB,KAAK,aAAaD,MAAOE,KAAKb,MAAME,WAAYiC,YAAY,cAAcC,SAAUvB,KAAKR,eAC5G,4BAAQ6B,KAAK,UAAb,cAEJ,yBAAKF,UAAU,QACX,yBAAKK,IAAKxB,KAAKb,MAAMG,YAAamC,IAAI,KACtC,wBAAIN,UAAU,OAAOnB,KAAKb,MAAMC,SAChC,wBAAI+B,UAAU,UAAUnB,KAAKb,MAAME,kB,GA1D3BqC,aEUbC,EATH,WACR,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCHZC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e9dd08ef.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            {/* <img\r\n                src=\"http://pngall.com/wp-content/uploads/2016/05/Trollface.png\"\r\n                alt=\"Problem?\"\r\n            /> */}\r\n            <p>Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {Component} from 'react'\r\nimport {getRandomInt} from '../general-functions'\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: [],\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        const {value, name} = event.target;\r\n        \r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleFormSubmit(event) {\r\n        event.preventDefault();\r\n        const randomInt = getRandomInt(0, this.state.allMemeImgs.length);\r\n        const url = this.state.allMemeImgs[randomInt].url;\r\n\r\n        this.setState({\r\n            randomImage: url,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\t\tconst headers = {\"X-Requested-With\": \"XMLHttpRequest\"};\r\n        const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n        fetch(proxy + \"https://api.imgflip.com/get_memes/\", {headers: headers})\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data;\r\n                this.setState({\r\n                    allMemeImgs: memes,\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleFormSubmit}>\r\n                    <input type=\"text\" name=\"topText\" value={this.state.topText} placeholder=\"Top text\" onChange={this.handleChange} />\r\n                    <input type=\"text\" name=\"bottomText\" value={this.state.bottomText} placeholder=\"Bottom text\" onChange={this.handleChange} />\r\n                    <button type=\"submit\">Generate!</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.randomImage} alt=\"\" />\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","import React from 'react'\r\nimport Header from './Header'\r\nimport MemeGenerator from './MemeGenerator'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}